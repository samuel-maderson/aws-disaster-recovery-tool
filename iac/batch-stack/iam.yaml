Parameters:
  AppName:
    Description: Application name
    Type: String
  KMSKeyId:
    Description: KMS Key Id
    Type: String


Resources:
  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'ecs-${AppName}-ExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
                - ecs-tasks.amazonaws.com
                - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
            Condition:
              ArnLike:
                'aws:SourceArn': !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:*'
              StringEquals:
                'aws:SourceAccount': !Ref AWS::AccountId
      Path: /
      Policies:
        - PolicyName: !Sub 'ecs-${AppName}-IAMPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "ssmmessages:CreateControlChannel"
                  - "ssmmessages:CreateDataChannel"
                  - "ssmmessages:OpenControlChannel"
                  - "ssmmessages:OpenDataChannel"
                Resource: '*'
        - PolicyName: !Sub 'ecr-${AppName}-IAMPolicy'
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "logs:CreateLogStream"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: '*'
        # OBS:  This is for dev environment only - in production, you should limit the scope of this policy
        - PolicyName: !Sub 'ec2-${AppName}-IAMPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:DescribeInstances"
                Resource: "*"
        - PolicyName: !Sub 'rds-${AppName}-IAMPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "rds:CreateDBSnapshot"
                  - "rds:CreateDBClusterSnapshot"
                  - "rds:DescribeDBSnapshots"
                  - "rds:DescribeDBClusterSnapshots"
                  - "rds:CopyDBSnapshot"
                  - "rds:CopyDBClusterSnapshot"
                  - "rds:ModifyDBSnapshotAttribute"
                  - "rds:ModifyDBClusterSnapshotAttribute"
                  - "rds:DescribeDBInstances"
                  - "rds:DescribeDBClusters"
                  - "rds:RestoreDBInstanceFromDBSnapshot"
                  - "rds:RestoreDBClusterFromSnapshot"
                Resource: "*"
        - PolicyName: !Sub 'kms-${AppName}-IAMPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "kms:*"
                Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KMSKeyId}'
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
         RoleName: !Sub 'ecs-${AppName}-BatchServiceRole'
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - batch.amazonaws.com
                Action:
                  - 'sts:AssumeRole'
         Path: /
         Policies:
          - PolicyName: !Join ['-', [!Ref AppName, 'batch-service-role'] ]
            PolicyDocument: 
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  # OBS:  This is for dev environment only - in production, you should limit the scope of this policy
                  Action:
                    - ec2:DescribeAccountAttributes
                    - ec2:DescribeInstances
                    - ec2:DescribeInstanceStatus
                    - ec2:DescribeInstanceAttribute
                    - ec2:DescribeSubnets
                    - ec2:DescribeSecurityGroups
                    - ec2:DescribeKeyPairs
                    - ec2:DescribeImages
                    - ec2:DescribeImageAttribute
                    - ec2:DescribeSpotInstanceRequests
                    - ec2:DescribeSpotFleetInstances
                    - ec2:DescribeSpotFleetRequests
                    - ec2:DescribeSpotPriceHistory
                    - ec2:DescribeVpcClassicLink
                    - ec2:DescribeLaunchTemplateVersions
                    - ec2:CreateLaunchTemplate
                    - ec2:DeleteLaunchTemplate
                    - ec2:RequestSpotFleet
                    - ec2:CancelSpotFleetRequests
                    - ec2:ModifySpotFleetRequest
                    - ec2:TerminateInstances
                    - ec2:RunInstances
                    - autoscaling:DescribeAccountLimits
                    - autoscaling:DescribeAutoScalingGroups
                    - autoscaling:DescribeLaunchConfigurations
                    - autoscaling:DescribeAutoScalingInstances
                    - autoscaling:CreateLaunchConfiguration
                    - autoscaling:CreateAutoScalingGroup
                    - autoscaling:UpdateAutoScalingGroup
                    - autoscaling:SetDesiredCapacity
                    - autoscaling:DeleteLaunchConfiguration
                    - autoscaling:DeleteAutoScalingGroup
                    - autoscaling:CreateOrUpdateTags
                    - autoscaling:SuspendProcesses
                    - autoscaling:PutNotificationConfiguration
                    - autoscaling:TerminateInstanceInAutoScalingGroup
                    - ecs:DescribeClusters
                    - ecs:DescribeContainerInstances
                    - ecs:DescribeTaskDefinition
                    - ecs:DescribeTasks
                    - ecs:ListAccountSettings
                    - ecs:ListClusters
                    - ecs:ListContainerInstances
                    - ecs:ListTaskDefinitionFamilies
                    - ecs:ListTaskDefinitions
                    - ecs:ListTasks
                    - ecs:CreateCluster
                    - ecs:DeleteCluster
                    - ecs:RegisterTaskDefinition
                    - ecs:DeregisterTaskDefinition
                    - ecs:RunTask
                    - ecs:StartTask
                    - ecs:StopTask
                    - ecs:UpdateContainerAgent
                    - ecs:DeregisterContainerInstance
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                    - iam:GetInstanceProfile
                    - iam:GetRole   
                  Resource: "*"
                - Effect: Allow
                  Action: ecs:TagResource
                  Resource:
                    - arn:aws:ecs:*:*:task/*_Batch_*
                - Effect: Allow
                  Action: iam:PassRole
                  Resource:
                    - "*"
                  Condition:
                    StringEquals:
                      iam:PassedToService:
                        - ec2.amazonaws.com
                        - ec2.amazonaws.com.cn
                        - ecs-tasks.amazonaws.com
                - Effect: Allow
                  Action: iam:CreateServiceLinkedRole
                  Resource: "*"
                  Condition:
                    StringEquals:
                      iam:AWSServiceName:
                        - spot.amazonaws.com
                        - spotfleet.amazonaws.com
                        - autoscaling.amazonaws.com
                        - ecs.amazonaws.com
                - Effect: Allow
                  Action:
                    - ec2:CreateTags
                  Resource:
                    - "*"
                  Condition:
                    StringEquals:
                      ec2:CreateAction: RunInstances



  EventRuleRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Join ['-', ['ecs', !Ref AppName, 'event-rule-role'] ]
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action: ['sts:AssumeRole']
        Path: /
        Policies:
          - PolicyName: !Join ['-', [!Ref AppName, 'event-rule-policy'] ]
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    # Allow the event to submit the job
                    - 'batch:SubmitJob'
                  Resource: '*'



Outputs:
  ECSExecutionRole:
    Description: ECS Execution Role
    Value: !Ref ECSExecutionRole
    Export:
      Name: !Sub '${AppName}-ECSExecutionRole'
  BatchServiceRole:
    Description: Batch Service Role
    Value: !Ref BatchServiceRole
    Export:
      Name: !Sub '${AppName}-BatchServiceRole'
  EventRuleRole:
    Description: Event Rule Role
    Value: !Ref EventRuleRole
    Export:
      Name: !Sub '${AppName}-EventRuleRole'